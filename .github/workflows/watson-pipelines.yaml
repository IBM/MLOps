# This is a basic workflow to help you get started with Actions

name: CI

#########################
####### TRIGGERS ########
#########################
on:
  # This is only for convenience for development --> remove ASAP
  # push:
  #   branches: [ "dev" ]

  # This is for Production
  pull_request:
    branches:
      - main
    types:
      - closed

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

##########################
##### JOB DEFINITION #####
##########################
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # Ensure it only runs for PRs that were merged and not just closed
    if: github.event.pull_request.merged == true
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Runs a set of commands using the runners shell
      - name: Setup cpdctl
        run: |
          curl "https://api.github.com/repos/IBM/cpdctl/releases/latest" \
          | grep "browser_download_url.*linux_amd64.tar.gz" \
          | cut -d : -f 2,3 | tr -d \" | wget -qi -
          
          tar -xf cpdctl_linux_amd64.tar.gz
          id
          ls -lah
          ./cpdctl config user set $USER_NAME --apikey $API_KEY --username $USER_NAME
          ./cpdctl config profile set cpd-context --user $USER_NAME --url $CLUSTER_URL
          ./cpdctl project list
        env:
          CLUSTER_URL: ${{ secrets.CLUSTER_URL}}
          USER_NAME: ${{ secrets.USER_NAME}}
          API_KEY: ${{ secrets.API_KEY}}

      # get the job id (assumes that there is only one Job!)
      - name: get job id
        run: echo "JOB_ID=$(./cpdctl job list --project-id $PROJECT_ID | grep -Eo '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}' | awk 'NR==1 {print $1}')" >> $GITHUB_ENV
        env:
          PROJECT_ID: ${{ secrets.PROJECT_ID}}
        
      # Runs a pipeline job
      - name: Start pipeline job
        run: |
          ./cpdctl job run create --job-id $JOB_ID --project-id $PROJECT_ID --job-run='{"configuration": {"env_variables": []}, "description": "Description", "job_parameters": [], "name": "Name", "parameter_sets": []}'
        env:
          PROJECT_ID: ${{ secrets.PROJECT_ID}}
